#include <iostream>
#include <fstream>
#include <string>
#include <cstdlib>

using namespace std;
int x;
struct todo {
    int id;
    string task;
};
void addtodo() {
    todo todo;
    cout << "Enter a new task: ";
    cin.get();
    getline(cin, todo.task); 
    x++; 
    ofstream write;
    write.open("todo.txt", ios::app);
    write << "\n" << x;
    write << "\n" << todo.task ;
    write.close();
    write.open("id.txt");
    write << x;
    write.close();

    char ch;
    cout<<"Do you want to add more task? y/n"<<endl;
    cin>> ch;
    if(ch == 'y'){
        addtodo();
    }
    else{
        cout << "\nTask has been added successfully";
        return;
    }
}

void print(todo s) {
    cout << "\nID is : " << s.id;
    cout << "\nTask is : " << s.task;
}

void viewData() {
    todo todo;
    ifstream read;
    read.open("todo.txt");
    cout << "\n------------------Your current Tasks in the list--------------------";
    while (!read.eof()) {
        read >> todo.id;
        read.ignore();
        getline(read, todo.task);
        print(todo);
    }
    read.close();
}

void removeData() {
    int id;
    cout << "\nEnter task id: ";
    cin >> id;
    cout << "\nDo you want to delete this task (y/n) : ";
    char choice;
    cin >> choice;
    if (choice == 'y') {
        todo todo;
        ofstream tempFile;
        tempFile.open("temp.txt");
        ifstream read;
        read.open("todo.txt");
        while (!read.eof()) {
            read >> todo.id;
            read.ignore();
            getline(read, todo.task);
            if (todo.id != id) {
                tempFile << "\n" << todo.id;
                tempFile << "\n" << todo.task;
            }
        }
        read.close();
        tempFile.close();
        remove("todo.txt");
        rename("temp.txt", "todo.txt");
        cout << "Task deleted successfuly";
    }
    else {
        cout << "Record not deleted";
    }
}

int main()
{
    cout<<"*****Lets make today's to-do list*****"<<endl;
    ifstream read;
    read.open("id.txt");
    if (!read.fail()) {
        read >> x;
    }
    else {
        x = 0;
    }
    read.close();

    while (true) {
        cout << "\n1.Add a task"<<endl;
        cout << "2.View a task"<<endl;
        cout << "3.Remove a task"<<endl;
       
        int choice;
        cout << "Enter choice : ";
        cin >> choice;
        switch (choice) {
        case 1:
            addtodo();
            break;
        case 2:
            viewData();
            break;
        case 3:
            removeData();
            break;
        }
    }
}
